Description:
 hatem ali / udacity nanodegree advanced cloud devops 
Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names.
    Type: String
    Default: Udagram

  

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to the load balancer.
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0 # allow all in port 80 
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0 # sent requests from instance through port 80 

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to web servers and SSH from the bastion host only.
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !Ref LBSecGroup  
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 
          Fn::ImportValue:
            !Sub ${EnvironmentName}-BASTION-HOST-1-CIDR
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 
          Fn::ImportValue:
            !Sub ${EnvironmentName}-BASTION-HOST-2-CIDR
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0 # allow all ports to send outbound traffic
  
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip python3-pip apache2 awscli -y
          systemctl start apache2.service
          pip3 install --upgrade awscli
          cd /var/www/html
          aws s3 cp s3://hatem-site-bucket/mycv_website.zip .
          unzip -o mycv_website.zip
      ImageId: ami-0b152cfd354c4c7a4 
      KeyName: project-ins-key
      SecurityGroups: 
        - !Ref WebServerSecGroup
      InstanceType: t3.micro
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'

  WebAppGroup: # defines how many web servers to launch in which subnets
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '4'
      TargetGroupARNs: 
        - !Ref WebAppTargetGroup

  WebAppLB: 
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups: 
        - !Ref LBSecGroup

  WebAppTargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
    DependsOn:
      - WebAppLB

  Listener: 
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLB
      Port: 80
      Protocol: HTTP
    DependsOn:
      - WebAppLB
      - WebAppTargetGroup

  ALBListenerRule: 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1

 

 

Outputs:

  WebAppLB:
    Description: The public URL of web application. 
    Value: 
      !Join
        - ''
        - - 'http://'
          - !GetAtt WebAppLB.DNSName
    Export:
      Name: !Sub ${EnvironmentName}-WEB-APP-URL